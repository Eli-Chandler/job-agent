"""init

Revision ID: a5ad7ad7b8f7
Revises:
Create Date: 2025-07-26 16:23:03.805235

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a5ad7ad7b8f7"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "candidate",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("phone", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_candidate_email"), "candidate", ["email"], unique=True)
    op.create_table(
        "job_listing",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=False),
        sa.Column("company", sa.String(length=500), nullable=False),
        sa.Column("application_url", sa.String(length=500), nullable=False),
        sa.Column("source", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("posted_at", sa.DateTime(), nullable=True),
        sa.Column("scraped_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "candidate_social_link",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("_link", sa.String(length=100), nullable=False),
        sa.Column("candidate_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["candidate_id"],
            ["candidate.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cover_letter",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("_name", sa.String(length=50), nullable=True),
        sa.Column("key", sa.String(length=100), nullable=False),
        sa.Column("candidate_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["candidate_id"],
            ["candidate.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "resume",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("_name", sa.String(length=50), nullable=True),
        sa.Column("key", sa.String(length=100), nullable=False),
        sa.Column("candidate_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["candidate_id"],
            ["candidate.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "job_application",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "_application_status",
            sa.Enum(
                "PENDING",
                "APPLYING",
                "APPLIED",
                "INTERVIEWING",
                "REJECTED",
                "OFFERED",
                name="jobapplicationstatus",
            ),
            nullable=False,
        ),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("candidate_id", sa.Integer(), nullable=True),
        sa.Column("job_listing_id", sa.Integer(), nullable=True),
        sa.Column("used_resume_id", sa.Integer(), nullable=True),
        sa.Column("used_cover_letter_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["candidate_id"],
            ["candidate.id"],
        ),
        sa.ForeignKeyConstraint(
            ["job_listing_id"],
            ["job_listing.id"],
        ),
        sa.ForeignKeyConstraint(
            ["used_cover_letter_id"],
            ["cover_letter.id"],
        ),
        sa.ForeignKeyConstraint(
            ["used_resume_id"],
            ["resume.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("job_application")
    op.drop_table("resume")
    op.drop_table("cover_letter")
    op.drop_table("candidate_social_link")
    op.drop_table("job_listing")
    op.drop_index(op.f("ix_candidate_email"), table_name="candidate")
    op.drop_table("candidate")
    # ### end Alembic commands ###
